const taskListElement = document.getElementById('task-list');
const addTaskForm = document.getElementById('add-task-form');
const addTaskButton = document.getElementById('add-task-button');

function renderTasks(tasks) {
  taskListElement.innerHTML = '';

  tasks.forEach((task) => {
    const taskElement = document.createElement('div');
    taskElement.className = 'bg-white p-4 rounded mb-4 shadow';

    const titleElement = document.createElement('h2');
    titleElement.className = 'text-lg font-semibold mb-2';
    titleElement.innerText = task.title;

    const descriptionElement = document.createElement('p');
    descriptionElement.innerText = task.description;

    const deleteButtonElement = document.createElement('button');
    deleteButtonElement.className = 'bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mt-2';
    deleteButtonElement.innerText = 'Delete';
    deleteButtonElement.addEventListener('click', () => {
      deleteTask(task.id);
    });

    const editButtonElement = document.createElement('button');
    editButtonElement.className = 'bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded mt-2 ml-2';
    editButtonElement.innerText = 'Edit';
    editButtonElement.addEventListener('click', () => {
      editTask(task);
    });

    taskElement.appendChild(titleElement);
    taskElement.appendChild(descriptionElement);
    taskElement.appendChild(deleteButtonElement);
    taskElement.appendChild(editButtonElement);

    taskListElement.appendChild(taskElement);
  });
}

function addTask(event) {
  event.preventDefault();

  const title = addTaskForm.elements.title.value;
  const description = addTaskForm.elements.description.value;

  const data = {
    title,
    description,
  };

  fetch('/tasks', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  })
    .then((response) => response.json())
    .then(() => {
      addTaskForm.reset();
      fetchTasks();
    })
    .catch((error) => console.error(error));
}

function deleteTask(taskId) {
  fetch(`/tasks/${taskId}`, {
    method: 'DELETE',
  })
    .then(() => {
      fetchTasks();
    })
    .catch((error) => console.error(error));
}

function editTask(task) {
  const { title, description } = task;

  const newTitle = prompt('Enter new title:', title);
  const newDescription = prompt('Enter new description:', description);

  if (newTitle || newDescription) {
    const data = {};

    if (newTitle) {
      data.title = newTitle;
    }

    if (newDescription) {
      data.description = newDescription;
    }

    fetch(`/tasks/${task.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    })
      .then(() => {
        fetchTasks();
      })
      .catch((error) => console.error(error));
  }
}

function fetchTasks() {
  fetch('/tasks')
    .then((response) => response.json())
    .then((tasks) => {
      renderTasks(tasks);
    })
    .catch((error) => console.error(error));
}

addTaskForm.addEventListener('submit', addTask);
addTaskButton.addEventListener('click', () => {
  addTaskForm.classList.toggle('hidden');
});

fetchTasks();
